openapi: 3.0.2
info:
  title: Kubernox API
  version: 1.0.0
  description: Kubernox API to manage K0S Cluster with Proxmox
tags:
  - name: Authentication
    description: Manage user authentication, including login and token refresh operations.
  - name: SSHKeys
    description: Manage application SSH keys.

paths:
  /api/identity/login:
    post:
      summary: Log in and retrieve a JWT and refresh token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: JWT and refresh token generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Invalid credentials

  /api/identity/refresh:
    post:
      summary: Refresh JWT using a refresh token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: JWT and refresh token refreshed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Invalid or expired refresh token

  /api/identity/profile:
    get:
      summary: Retrieve the user profile
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '401':
          description: Invalid or missing JWT

  /api/ssh-keys:
    get:
      summary: List all SSH keys
      tags:
        - SSHKeys
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of SSH keys
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SSHKey'

    post:
      summary: Create an SSH key (generation or import)
      tags:
        - SSHKeys
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSSHKeyRequest'
      responses:
        '201':
          description: SSH key created or imported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKeyPair'

  /api/ssh-keys/{id}:
    get:
      summary: Retrieve a specific SSH key
      tags:
        - SSHKeys
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: GUID of the SSH key
      responses:
        '200':
          description: SSH key retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
        '404':
          description: SSH key not found

    put:
      summary: Update a specific SSH key
      tags:
        - SSHKeys
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: GUID of the SSH key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSSHKeyRequest'
      responses:
        '200':
          description: SSH key updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
        '404':
          description: SSH key not found

    delete:
      summary: Delete a specific SSH key
      tags:
        - SSHKeys
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: GUID of the SSH key
      responses:
        '204':
          description: SSH key deleted
        '404':
          description: SSH key not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password

    RefreshTokenRequest:
      type: object
      properties:
        refreshToken:
          type: string
      required:
        - refreshToken

    TokenResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: "JWT access token"
        refreshToken:
          type: string
          description: "Refresh token"

    UserProfile:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string

    SSHKey:
      type: object
      properties:
        id:
          type: string
          format: uuid
        publicKey:
          type: string
        createdAt:
          type: string
          format: date-time

    SSHKeyPair:
      type: object
      properties:
        id:
          type: string
          format: uuid
        publicKey:
          type: string
        privateKey:
          type: string
        createdAt:
          type: string
          format: date-time

    CreateSSHKeyRequest:
      type: object
      properties:
        generate:
          type: boolean
          description: "Indicates whether a key should be generated"
        publicKey:
          type: string
          description: "Public key to import, required if 'generate' is false"
      required:
        - generate

    UpdateSSHKeyRequest:
      type: object
      properties:
        publicKey:
          type: string
          description: "New public key"
      required:
        - publicKey
